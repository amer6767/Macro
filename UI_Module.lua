-- This is UI_Module.lua-- It contains ONLY the GUI creation code.-- It assumes 'mainGui' and 'player' exist in its environment.local CoreGui = game:GetService("CoreGui")local FONT_MAIN = Enum.Font.Gothamlocal FONT_BOLD = Enum.Font.GothamBold-- Re-create the main ScreenGui under CoreGuimainGui = Instance.new("ScreenGui")mainGui.Name = "MacroV2GUI"mainGui.IgnoreGuiInset = truemainGui.ResetOnSpawn = falsemainGui.ZIndexBehavior = Enum.ZIndexBehavior.GlobalmainGui.Parent = CoreGui-- --- Main Frame ---mainFrame = Instance.new("Frame", mainGui)mainFrame.Size = UDim2.new(0, 260, 0, 360)mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)mainFrame.BorderSizePixel = 0mainFrame.ClipsDescendants = truemainFrame.Visible = false -- Main.lua will make this visiblelocal frameCorner = Instance.new("UICorner", mainFrame)frameCorner.CornerRadius = UDim.new(0, 12)dragLayer = Instance.new("Frame", mainFrame)dragLayer.Size = UDim2.new(1, 0, 0, 40)dragLayer.BackgroundTransparency = 1dragLayer.ZIndex = 1dragLayer.Active = truelocal title = Instance.new("TextLabel", mainFrame)title.Size = UDim2.new(1, 0, 0, 40)title.BackgroundTransparency = 1title.Text = "Macro V2"title.TextColor3 = Color3.fromRGB(255, 255, 255)title.Font = FONT_BOLDtitle.TextSize = 22title.ZIndex = 2-- --- Tab Bar ---tabBar = Instance.new("Frame", mainFrame)tabBar.Size = UDim2.new(1, 0, 0, 40)tabBar.Position = UDim2.new(0, 0, 0, 40)tabBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)tabAutoClicker = Instance.new("TextButton", tabBar)tabAutoClicker.Size = UDim2.new(0, 75, 1, 0)tabAutoClicker.Text = "Auto"tabAutoClicker.Font = FONT_MAINtabAutoClicker.TextSize = 14tabAutoClicker.TextColor3 = Color3.new(1, 1, 1)tabAutoClicker.BackgroundColor3 = Color3.fromRGB(50, 50, 50)local tabAutoCorner = Instance.new("UICorner", tabAutoClicker)tabAutoCorner.CornerRadius = UDim.new(0, 4)tabRecorder = Instance.new("TextButton", tabBar)tabRecorder.Size = UDim2.new(0, 75, 1, 0)tabRecorder.Position = UDim2.new(0, 75, 0, 0)tabRecorder.Text = "Record"tabRecorder.Font = FONT_MAINtabRecorder.TextSize = 14tabRecorder.TextColor3 = Color3.new(1, 1, 1)tabRecorder.BackgroundColor3 = Color3.fromRGB(50, 50, 50)local tabRecordCorner = Instance.new("UICorner", tabRecorder)tabRecordCorner.CornerRadius = UDim.new(0, 4)tabSettings = Instance.new("TextButton", tabBar)tabSettings.Size = UDim2.new(0, 75, 1, 0)tabSettings.Position = UDim2.new(0, 150, 0, 0)tabSettings.Text = "Settings"tabSettings.Font = FONT_MAINtabSettings.TextSize = 14tabSettings.TextColor3 = Color3.new(1, 1, 1)tabSettings.BackgroundColor3 = Color3.fromRGB(50, 50, 50)local tabSettingsCorner = Instance.new("UICorner", tabSettings)tabSettingsCorner.CornerRadius = UDim.new(0, 4)-- --- Content Areas ---contentArea = Instance.new("Frame", mainFrame)contentArea.Size = UDim2.new(1, 0, 1, -80)contentArea.Position = UDim2.new(0, 0, 0, 80)contentArea.BackgroundTransparency = 1autoContent = Instance.new("Frame", contentArea)autoContent.Size = UDim2.new(1, 0, 1, 0)autoContent.BackgroundTransparency = 1autoContent.Visible = truerecordContent = Instance.new("Frame", contentArea)recordContent.Size = UDim2.new(1, 0, 1, 0)recordContent.BackgroundTransparency = 1recordContent.Visible = falsesettingsContent = Instance.new("Frame", contentArea)settingsContent.Size = UDim2.new(1, 0, 1, 0)settingsContent.BackgroundTransparency = 1settingsContent.Visible = false-- --- Button Factory ---local function createButton(text, posY, parent)local btn = Instance.new("TextButton")btn.Size = UDim2.new(0.85, 0, 0, 30)btn.Position = UDim2.new(0.075, 0, 0, posY)btn.Text = textbtn.TextColor3 = Color3.fromRGB(255, 255, 255)btn.Font = FONT_MAINbtn.TextSize = 16btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)btn.BorderSizePixel = 0btn.ZIndex = 3btn.Parent = parentlocal corner = Instance.new("UICorner", btn)corner.CornerRadius = UDim.new(0, 6)return btnend-- --- Auto Tab Content ---btnAutoClicker = createButton("Auto Clicker: OFF", 10, autoContent)btnSetPosition = createButton("Set Position", 50, autoContent)lblInterval = Instance.new("TextBox", autoContent)lblInterval.Size = UDim2.new(0.85, 0, 0, 30)lblInterval.Position = UDim2.new(0.075, 0, 0, 90)lblInterval.PlaceholderText = "Click Interval (sec)"lblInterval.Text = "0.2" -- Default from corelblInterval.Font = FONT_MAINlblInterval.TextSize = 14lblInterval.TextColor3 = Color3.fromRGB(255, 255, 255)lblInterval.BackgroundColor3 = Color3.fromRGB(45, 45, 45)lblInterval.BorderSizePixel = 0local lblIntervalCorner = Instance.new("UICorner", lblInterval)lblIntervalCorner.CornerRadius = UDim.new(0, 6)-- --- Record Tab Content ---btnStartRecording = createButton("Start Recording", 10, recordContent)btnReplayClicks = createButton("Replay Clicks", 50, recordContent)btnReplayLoop = createButton("Replay Loop: OFF", 90, recordContent)replayCountInput = Instance.new("TextBox", recordContent)replayCountInput.Size = UDim2.new(0.85, 0, 0, 30)replayCountInput.Position = UDim2.new(0.075, 0, 0, 130)replayCountInput.PlaceholderText = "Replay Amount (default 1)"replayCountInput.Text = "1"replayCountInput.Font = FONT_MAINreplayCountInput.TextSize = 16replayCountInput.TextColor3 = Color3.fromRGB(255, 255, 255)replayCountInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)replayCountInput.BorderSizePixel = 0replayCountInput.ZIndex = 3local replayCorner = Instance.new("UICorner", replayCountInput)replayCorner.CornerRadius = UDim.new(0, 6)-- --- Settings Tab Content ---offsetXInput = Instance.new("TextBox", settingsContent)offsetXInput.Size = UDim2.new(0.85, 0, 0, 30)offsetXInput.Position = UDim2.new(0.075, 0, 0, 10)offsetXInput.PlaceholderText = "Set X Offset (px or % e.g. 10 or 2%)"offsetXInput.Text = "0"offsetXInput.Font = FONT_MAINoffsetXInput.TextSize = 16offsetXInput.TextColor3 = Color3.fromRGB(255, 255, 255)offsetXInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)offsetXInput.BorderSizePixel = 0offsetXInput.ClearTextOnFocus = falseoffsetXInput.ZIndex = 3local offsetXCorner = Instance.new("UICorner", offsetXInput)offsetXCorner.CornerRadius = UDim.new(0, 6)offsetYInput = Instance.new("TextBox", settingsContent)offsetYInput.Size = UDim2.new(0.85, 0, 0, 30)offsetYInput.Position = UDim2.new(0.075, 0, 0, 50)offsetYInput.PlaceholderText = "Set Y Offset (px or % e.g. -5 or -1%)"offsetYInput.Text = "0"offsetYInput.Font = FONT_MAINoffsetYInput.TextSize = 16offsetYInput.TextColor3 = Color3.fromRGB(255, 255, 255)offsetYInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)offsetYInput.BorderSizePixel = 0offsetYInput.ClearTextOnFocus = falseoffsetYInput.ZIndex = 3local offsetYCorner = Instance.new("UICorner", offsetYInput)offsetYCorner.CornerRadius = UDim.new(0, 6)swipeCurveInput = Instance.new("TextBox", settingsContent)swipeCurveInput.Size = UDim2.new(0.85, 0, 0, 30)swipeCurveInput.Position = UDim2.new(0.075, 0, 0, 90)swipeCurveInput.PlaceholderText = "Swipe Curvature (0..50%)"swipeCurveInput.Text = "0" -- Default from coreswipeCurveInput.Font = FONT_MAINswipeCurveInput.TextSize = 16swipeCurveInput.TextColor3 = Color3.fromRGB(255, 255, 255)swipeCurveInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)swipeCurveInput.BorderSizePixel = 0swipeCurveInput.ClearTextOnFocus = falseswipeCurveInput.ZIndex = 3local swipeCorner = Instance.new("UICorner", swipeCurveInput)swipeCorner.CornerRadius = UDim.new(0, 6)btnApplyOffsets = createButton("Apply Offsets & Swipe Curve", 130, settingsContent)-- --- Toggle Button ---toggleGuiBtn = Instance.new("TextButton", mainGui)toggleGuiBtn.Size = UDim2.new(0, 70, 0, 30)toggleGuiBtn.Position = UDim2.new(0, 10, 0, 70)toggleGuiBtn.Text = "Hide"toggleGuiBtn.Font = FONT_MAINtoggleGuiBtn.TextSize = 14toggleGuiBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)toggleGuiBtn.TextColor3 = Color3.fromRGB(255, 255, 255)toggleGuiBtn.ZIndex = 1000toggleGuiBtn.Visible = false -- Main.lua will make this visibletoggleGuiBtn.Active = truelocal toggleCorner = Instance.new("UICorner", toggleGuiBtn)toggleCorner.CornerRadius = UDim.new(0, 6)-- --- Draggability ---local UserInputService = game:GetService("UserInputService")local function makeDraggable(guiObject, dragHandle)local dragging = falselocal dragStartMousePoslocal objectStartPosdragHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStartMousePos = UserInputService:GetMouseLocation()
        objectStartPos = guiObject.Position
    end
end)

dragHandle.InputChanged:Connect(function(changedInput)
    if not dragging then return end
    if changedInput.UserInputType == Enum.UserInputType.MouseMovement or changedInput.UserInputType == Enum.UserInputType.Touch then
        local currentMousePos = UserInputService:GetMouseLocation()
        local delta = currentMousePos - dragStartMousePos
        guiObject.Position = UDim2.new(
            objectStartPos.X.Scale, objectStartPos.X.Offset + delta.X,
            objectStartPos.Y.Scale, objectStartPos.Y.Offset + delta.Y
        )
    end
end)

dragHandle.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
endmakeDraggable(mainFrame, dragLayer)makeDraggable(toggleGuiBtn, toggleGuiBtn)-- --- Connect UI to Core Functions ----- Core.lua will be loaded after this, so it can find these UI elements-- and connect them to its functions.-- To make this work, we need to connect them in Core.lua-- But Core.lua can't find the UI elements...-- We must connect them here, and the functions must be global.btnAutoClicker.MouseButton1Click:Connect(function()local val = tonumber(lblInterval.Text)if val and val > 0 then clickInterval = valelse lblInterval.Text = tostring(clickInterval) endtoggleAutoClicker()end)btnSetPosition.MouseButton1Click:Connect(setClickPosition)btnStartRecording.MouseButton1Click:Connect(toggleRecording)btnReplayClicks.MouseButton1Click:Connect(toggleReplay)btnReplayLoop.MouseButton1Click:Connect(toggleReplayLoop)btnApplyOffsets.MouseButton1Click:Connect(applyOffsets)toggleGuiBtn.MouseButton1Click:Connect(function()guiHidden = not guiHiddenmainFrame.Visible = not guiHiddentoggleGuiBtn.Text = guiHidden and "Show" or "Hide"end)tabAutoClicker.MouseButton1Click:Connect(function() selectTab("auto") end)tabRecorder.MouseButton1Click:Connect(function() selectTab("record") end)tabSettings.MouseButton1Click:Connect(function() selectTab("settings") end)-- Set initial stateselectTab("auto")